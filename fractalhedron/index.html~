<html>
<head>
    <!--<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/gl-matrix/2.1.0/gl-matrix-min.js"></script>-->
    <script type="text/javascript" src="http://learningwebgl.com/lessons/lesson01/glMatrix-0.9.5.min.js"></script>
    <style>
        * {margin: 0; padding: 0;}
        body {text-align: center; background-color: #000;}
        h1 {
            color: #CECECE;
            margin-top: 10px;
            /*border-bottom: 1px solid;*/
            padding-bottom: 3px;
        }
        h3,h4 {
            color: #CECECE;
        }

        td {
            color: #CECECE;
        }
    </style>
    <script id="fshader" type="x-shader/x-fragment">
            precision mediump float;

            varying vec2 vTextureCoord;
            varying vec3 vLightWeighting;

            uniform float uAlpha;
            uniform sampler2D uSampler;

            void main()
            {
                vec4 textureColor = texture2D(uSampler, vTextureCoord);
                gl_FragColor = vec4(textureColor.rgb * vLightWeighting, textureColor.a * uAlpha);
            }
    </script>

    <script id="vshader" type="x-shader/x-vertex">
            attribute vec3 aVertexPosition;
            attribute vec3 aVertexNormal;
            attribute vec2 aTextureCoord;

            uniform mat4 uMVMatrix;
            uniform mat4 uPMatrix;
            uniform mat3 uNMatrix;

            uniform vec3 uAmbientColor;

            uniform vec3 uLightingDirection;
            uniform vec3 uDirectionalColor;
            uniform bool uUseLighting;

            varying vec2 vTextureCoord;
            varying vec3 vLightWeighting;

            void main()
            {
                gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);

                // Set vertex colors.
                vTextureCoord = aTextureCoord;

                if(!uUseLighting)
                {
                    vLightWeighting = vec3(1.0, 1.0, 1.0);
                }
                else
                {
                    vec3 transformedNormal = uNMatrix * aVertexNormal;
                    float directionalLightWeight = max(dot(transformedNormal, uLightingDirection), 0.0);
                    vLightWeighting = uAmbientColor + uDirectionalColor * directionalLightWeight;
                }
            }
        </script>

    <script type="text/javascript" src="app.js"></script>
</head>

<body onload="webGLStart();">
<h1>Fractalhedron</h1>
<div class="mydiv" id="fpscounter" style="background-color: black; color: #CECECE">
    <h3> </h3>
</div>
<canvas id="canvas01" style="border: none;" width="500" height="500"></canvas>

<br/>

<h3> Arrow keys to rotate, WASD to move, 0-9 to select fractal texture.</h3><br/>
<h3> F to change alpha, G to toggle lighting, H to toggle alpha.</h3>
</body>
</html>
